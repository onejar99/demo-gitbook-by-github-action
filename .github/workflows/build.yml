name: Build my gitbook and deploy to gh-pages

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    env:
      MY_SECRET   : ${{secrets.GH_ACCESS_TOKEN}}
      USER_NAME   : onejar99
      USER_EMAIL  : onejar99@gmail.com
      BOOK_OUTPUT_DIR  : _book

    steps:
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@v2.3.1
      with:
        persist-credentials: false

    - name: Build and Deploy üöÄ
      run: |
          echo '[INFO] Start to build Gitbook static files...'
          echo "SHELL=[$SHELL]"
          echo "pwd=[$(pwd)]"

          function checkIfErr() {
              ret=$?
              echo "ret=[${ret}]"
              if [ ! $ret = '0' ]; then
                  echo "Oops something wrong! exit code: ${ret}"
                  exit $ret;
              fi
          }

          ls -al
          docker run --rm -p 4000:4000 -v $(pwd):/gitbook onejar99/gitbook:light "gitbook init && gitbook install && gitbook build"
          checkIfErr
          echo '[INFO] Prepare to deploy...'
          echo "SHELL=[$SHELL]"
          echo "HOME=[$HOME]"
          echo "GITHUB_WORKSPACE=[$GITHUB_WORKSPACE]"
          echo "GITHUB_RUN_ID=[$GITHUB_RUN_ID]"
          echo "GITHUB_REPOSITORY=[$GITHUB_REPOSITORY]"
          echo "GITHUB_SHA=[$GITHUB_SHA]"
          echo "MY_SECRET=[$MY_SECRET]"
          echo "USER_NAME=[$USER_NAME]"
          echo "USER_EMAIL=[$USER_EMAIL]"
          echo "BOOK_OUTPUT_DIR=[$BOOK_OUTPUT_DIR]"
          echo "whoami=[$(whoami)]"
          echo "pwd=[$(pwd)]"
          GH_PAGES_FOLDER=${GITHUB_REPOSITORY}_ghpages
          export GH_PAGES_FOLDER
          echo "GH_PAGES_FOLDER=[$GH_PAGES_FOLDER]"
          ls -al
          echo '[INFO] Create or clone gh-pages branch...'
          GIT_CLONE_URL="https://${MY_SECRET}@github.com/${GITHUB_REPOSITORY}.git"
          export GIT_CLONE_URL
          echo "GIT_CLONE_URL=[$GIT_CLONE_URL]"
          git clone https://${MY_SECRET}@github.com/${GITHUB_REPOSITORY}.git "${GH_PAGES_FOLDER}";
          #git clone ${GIT_CLONE_URL} ${GH_PAGES_FOLDER}
          checkIfErr
          cd ${GH_PAGES_FOLDER}
          git checkout -b gh-pages
          checkIfErr
          cd ..

          echo '[INFO] Copy GitBook output pages...'
          ls -al
          rm -rf $GH_PAGES_FOLDER
          cp -rf $BOOK_OUTPUT_DIR $GH_PAGES_FOLDER
          cd $GH_PAGES_FOLDER
          ls -al

          echo '[INFO] Add new commit for gh-pages...'
          git config --local user.name $USER_NAME
          git config --local user.email $USER_EMAIL
          git status
          git add --all
          git commit -m "Deploy to Github Pages ü•Ç (from $GITHUB_SHA)"
          checkIfErr
          echo '[INFO] Push to gh-pages...'
          git push --set-upstream origin gh-pages -f
          checkIfErr
          echo '[INFO] Deploy gh-pages completed! üí™üíØ'

      # run: |
      #   bash -c "$(curl -fsSL https://raw.githubusercontent.com/onejar99/notes-box/master/cicd-scripts/build.sh)"
      #   bash -c "$(curl -fsSL https://raw.githubusercontent.com/onejar99/notes-box/master/cicd-scripts/deploy.sh)"
